# vim: filetype=bash

#############################################################################
####  _                      _             _            _                ####
#### | |                    (_)           | |          | |               ####
#### | |_ ___ _ __ _ __ ___  _ _ __   __ _| |  ___  ___| |_ _   _ _ __   ####
#### | __/ _ \ '__| '_ ` _ \| | '_ \ / _` | | / __|/ _ \ __| | | | '_ \  ####
#### | ||  __/ |  | | | | | | | | | | (_| | | \__ \  __/ |_| |_| | |_) | ####
####  \__\___|_|  |_| |_| |_|_|_| |_|\__,_|_| |___/\___|\__|\__,_| .__/  ####
####                                      ______                 | |     ####
####                                     |______|                |_|     ####
#############################################################################
## settings that affect terminal look and feel, which editor is preferred for cmd line, etc.

# for colorful terminals
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced

# for homebrew and other cmd progs that can use multiple txt editors
export EDITOR="vim"

# use vim for viewing manpages (default is /usr/bin/less)
export MANPAGER="env MAN_PN=1 vim --not-a-term +MANPAGER -"

# When set, MANAPGER takes precedence when using python's help(...) command at
# a terminal. The above MANPAGER breaks help() though, so we use another var
# to override MANPAGER when python starts up (implemented in .pythonstartup.py)
export PYDOCPAGER="vim --not-a-term +PYDOCPAGER -"

# download the iterm2 integration script if it's not already in $HOME
if [ ! -f "${HOME}/.iterm2_shell_integration.bash" ]; then
    printf "Downloading iterm2 integration script...\n\n"

    curl -L https://iterm2.com/shell_integration/bash \
    -o ~/.iterm2_shell_integration.bash

    printf "\n...done\n\n"
fi

# source the iterm2 integration script
source "${HOME}/.iterm2_shell_integration.bash"

# allow the C-s keyboard input to be used for search instead of XON/XOFF signal
# ref: https://stackoverflow.com/a/25391867
[[ $- == *i* ]] && stty -ixon

